package letscode.telegrambot.config;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.api.methods.send.SendMessage;
import org.telegram.telegrambots.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.api.objects.replykeyboard.buttons.KeyboardRow;

import java.util.ArrayList;
import java.util.List;

@Component
public class KeyboardReply {
    /**
     * –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å 4–º—è –∫–Ω–æ–ø–∫–∞–º–∏ <ul>
     * <li><b>–ë–∞–∑–∞ –û—Ç–≤–µ—Ç–æ–≤</b> - –í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤—Å–µ –∑–∞–∫—Ä—ã—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
     * <li><b>–ú–æ–∏ –≤–æ–ø—Ä–æ—Å—ã</b> - –í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</li>
     * <li><b>–°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤</b> - –í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ–º–∏ –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
     * <li><b>–ü–æ–º–æ—â—å</b> - FAQ</li>
     * </ul>
     *
     * @param sendMessage - <code>SendMessage sendMessage</code> –¥–æ–±–∞–≤–ª—è–µ–º –≤ sendMessage –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
     */
    public void setBottomButtons(SendMessage sendMessage) {
        // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏—É–∞—Ç—É—Ä—É
        ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();
        sendMessage.setReplyMarkup(replyKeyboardMarkup);
        replyKeyboardMarkup.setSelective(true);
        replyKeyboardMarkup.setResizeKeyboard(true);
        replyKeyboardMarkup.setOneTimeKeyboard(false);

        // –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä—è–¥–æ–≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        List<KeyboardRow> keyboard = new ArrayList<>();

        // –ü–µ—Ä–≤—ã–π —Ä—è–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        KeyboardRow keyboardFirstRow = new KeyboardRow();
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø–µ—Ä–≤—ã–π —Ä—è–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        keyboardFirstRow.add(new KeyboardButton("–ë–∞–∑–∞ –û—Ç–≤–µ—Ç–æ–≤üìö"));
        keyboardFirstRow.add(new KeyboardButton("–ú–æ–∏ –≤–æ–ø—Ä–æ—Å—ãüìí"));

        // –í—Ç–æ—Ä–æ–π —Ä—è–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        KeyboardRow keyboardSecondRow = new KeyboardRow();
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤–æ –≤—Ç–æ—Ä–æ–π —Ä—è–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        keyboardSecondRow.add(new KeyboardButton("–°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ üìù"));
        keyboardSecondRow.add(new KeyboardButton("–ü–æ–º–æ—â—å üí¨"));

        keyboard.add(keyboardFirstRow);
        keyboard.add(keyboardSecondRow);

        replyKeyboardMarkup.setKeyboard(keyboard);
    }

    /**
     * –ú–µ—Ç–æ–¥ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤ SendMessage <code>sendMessage.setReplyMarkup(markupInline);</code>
     * –∫–Ω–æ–ø–∫–∏ –≤ —Ç–µ–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∑–∞ —Å—á–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π isAnswer
     *
     * @param sendMessage - —Ç–µ–ª–æ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param isAnswer    - –±—É–ª–µ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ—Ç –∫–æ—Ç–æ—Ä–æ–π –∑–∞–≤–∏—Å–∏—Ç –∫–∞–∫–∞—è –±—É–¥–µ—Ç –∫–Ω–æ–ø–∫–∞ "–û—Ç–∫—Ä—ã—Ç—å –æ—Ç–≤–µ—Ç" - true
     *                    "–û—Ç–∫—Ä—ã—Ç—å –≤–æ–ø—Ä–æ—Å" - false.
     */
    public void addOpenButton(SendMessage sendMessage, boolean isAnswer) {
        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();

        List<InlineKeyboardButton> rowInline = new ArrayList<>();
        InlineKeyboardButton btn = new InlineKeyboardButton();

        if (!isAnswer) {
            InlineKeyboardButton button = btn.setText("–û—Ç–∫—Ä—ã—Ç—å –≤–æ–ø—Ä–æ—Å").setCallbackData("getQuest");
            rowInline.add(button);
        } else {
            InlineKeyboardButton button = btn.setText("–û—Ç–∫—Ä—ã—Ç—å –æ—Ç–≤–µ—Ç").setCallbackData("getAnswer");
            rowInline.add(button);
        }

        rowsInline.add(rowInline);
        markupInline.setKeyboard(rowsInline);
        sendMessage.setReplyMarkup(markupInline);
    }

    /**
     * –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞.
     *
     * @param sendMessage   - —Ç–µ–ª–æ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param isAuthor      - –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è true, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç—å –≤–æ–ø—Ä–æ—Å.
     * @param enableAnswer  - –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è true, –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å.
     * @param enableLikeDis - –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ Like-Dislike
     */
    public void addTwoLineKeyboard(SendMessage sendMessage,
                                   boolean isAuthor,
                                   boolean enableAnswer,
                                   boolean enableLikeDis) {
        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();
        List<InlineKeyboardButton> rowInline = new ArrayList<>();

        if (isAuthor && !enableLikeDis) {
            InlineKeyboardButton btnDone = new InlineKeyboardButton();
            InlineKeyboardButton buttonDone = btnDone.setText("–ó–∞–∫—Ä—ã—Ç—å –≤–æ–ø—Ä–æ—Å").setCallbackData("setDone");
            rowInline.add(buttonDone);
        }

        if (enableAnswer) {
            InlineKeyboardButton btnListAnswer = new InlineKeyboardButton();
            InlineKeyboardButton buttonAnswerList = btnListAnswer.setText("–û—Ç–≤–µ—Ç—ã").setCallbackData("getAnswerList");
            rowInline.add(buttonAnswerList);
        }

        if (enableLikeDis) {
            InlineKeyboardButton btnLike = new InlineKeyboardButton();
            InlineKeyboardButton buttonLike = btnLike.setText("üëç").setCallbackData("setLike");
            rowInline.add(buttonLike);
            InlineKeyboardButton btnDislike = new InlineKeyboardButton();
            InlineKeyboardButton buttonDisLike = btnDislike.setText("üëé").setCallbackData("setDislike");
            rowInline.add(buttonDisLike);
        }

        rowsInline.add(rowInline);
        markupInline.setKeyboard(rowsInline);
        sendMessage.setReplyMarkup(markupInline);
    }

}
